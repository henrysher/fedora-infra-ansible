### The URL at which the project is available.
{% if env == 'staging' %}
APP_URL = 'https://src.stg.fedoraproject.org/'
{% else %}
APP_URL = 'https://src.fedoraproject.org/'
{% endif %}

WEBHOOK = True
### Folder containing to the git repos
GIT_FOLDER = '/srv/git/repositories'

### Folder containing the docs repos
ENABLE_DOCS = False
DOCS_FOLDER = None

### Folder containing the pull-requests repos
REQUESTS_FOLDER = '/srv/git/repositories/requests'

### Folder containing the tickets repos
ENABLE_TICKETS = True
ENABLE_TICKETS_NAMESPACE = ["tests"]
TICKETS_FOLDER = '/srv/git/repositories/tickets'

### Folder containing the clones of the remotes git repo
REMOTE_GIT_FOLDER = '/srv/git/remotes'

### Folder where to run gl-compile-conf from
GITOLITE_HOME = '/srv/git/'

### Configuration file for gitolite
GITOLITE_CONFIG = '/srv/git/.gitolite/conf/gitolite.conf'

### File to include at the top of the gitolite configuration file
GITOLITE_PRE_CONFIG = '/var/tmp/gitolite-prefix.txt'

### Temp folder to be used to make the clones to work around bug in libgit2:
## refs: https://github.com/libgit2/libgit2/issues/2965
## and   https://github.com/libgit2/libgit2/issues/2797
TMP_FOLDER = '/srv/tmp'

REDIS_HOST = '0.0.0.0'
REDIS_PORT = 6379
REDIS_DB = 0

# Configuration item that are specific for this odd pagure instance
CASE_SENSITIVE = True

ENABLE_NEW_PROJECTS = True
ENABLE_DEL_PROJECTS = False
ENABLE_DEL_FORKS = True
ENABLE_GROUP_MNGT = False
DEPLOY_KEY = False
LOCAL_SSH_KEY = False
ALLOW_DELETE_BRANCH = False
EMAIL_ON_WATCHCOMMITS = False
GIT_HOOK_DB_RO = True
LOG_ALL_COMMITS = True

DISABLED_PLUGINS = ['IRC', 'Pagure tickets', 'Read the Doc', 'Fedmsg']

GITOLITE_BACKEND = 'distgit'
GITOLITE_CELERY_QUEUE = 'gitolite_queue'

BLACKLISTED_GROUPS = ['forks', 'group']

# ACL settings
ACL_BLOCK_UNSPECIFIED = False
ACL_PROTECTED_NAMESPACES = ['rpms', 'modules', 'container']
RCM_GROUP = 'cvsadmin'
RCM_BRANCHES = ['refs/heads/f[0-9]+', 'refs/tags/.*', 'refs/heads/master', 'refs/heads/.*']
# Pushing to c* stuff is never allowed
BLACKLIST_RES = ['refs/heads/c[0-9]+.*']
# Pushing to (f|epel|el|olpc)(num+) that is not previously approved
# (supported branches) is not allowed.
UNSPECIFIED_BLACKLIST_RES = ['refs/heads/f[0-9]+',
                             'refs/heads/epel[0-9]+',
                             'refs/heads/el[0-9]+',
                             'refs/heads/olpc[0-9]+']

ALLOW_HTTP_PUSH = True

PDC_URL = 'https://pdc{{ env_suffix }}.fedoraproject.org/rest_api/v1/'

SSH_KEYS_USERNAME_LOOKUP = True
SSH_KEYS_OPTIONS = 'restrict,command="/usr/libexec/pagure/aclchecker.py %(username)s"'
SSH_COMMAND_REPOSPANNER = ([
    "/usr/libexec/repobridge",
    "--extra", "username", "%(username)s",
    "--extra", "repotype", "%(repotype)s",
    "--extra", "project_name", "%(project_name)s",
    "--extra", "project_user", "%(project_user)s",
    "--extra", "project_namespace", "%(project_namespace)s",
    "%(cmd)s",
    "'pagure/%(repotype)s/%(reponame)s'",
], {"REPOBRIDGE_CONFIG": "/etc/repobridge/rpms.json"})
SSH_COMMAND_NON_REPOSPANNER = ([
    "/usr/libexec/git-core/%(cmd)s",
    "%(repopath)s",
], {"GL_USER": "%(username)s"})

EXTERNAL_COMMITTER = {
    'cvsadmin': {},
    'provenpackager': {
        'exclude': ['rpms/xulrunner', 'rpms/thunderbird', 'rpms/firefox']
    }
}

{% if env == "staging" %}
ACL_DEBUG = True

# repoSpanner setup

# For now, repoSpanner is enabled on a per-repo basis
REPOSPANNER_NEW_REPO = None
REPOSPANNER_NEW_REPO_ADMIN_OVERRIDE = True
REPOSPANNER_NEW_FORK = True
REPOSPANNER_ADMIN_MIGRATION = True
REPOSPANNER_REGIONS = {
    'rpms': {'url': 'https://fedora01.rpms.stg.fedoraproject.org:{{ repoSpanner_rpms_http }}',
             'repo_prefix': 'pagure/',
{% if env == "staging" %}
	     'hook': '06cd5acb2d774491e02bc0dd4dc1555ab5664a6a',
{% else %}
	     'hook': '0000000000000000000000000000000000000000',
{% endif %}
	     'ca': '/etc/pagure/ca.crt',
	     'admin_cert': {'cert': '/etc/pagure/fedora_rpms_admin.crt',
	                    'key': '/etc/pagure/fedora_rpms_admin.key'},
	     'push_cert': {'cert': '/etc/pagure/fedora_rpms_push.crt',
	                   'key': '/etc/pagure/fedora_rpms_push.key'}
            }
}
REPOSPANNER_PSEUDO_FOLDER = '/srv/git/repositories/pseudo'

{% endif %}
