apiVersion: v1
kind: BuildConfig
metadata:
  labels:
    build: ipsilon
  name: ipsilon
spec:
  runPolicy: Serial
  source:
    dockerfile: |-
      FROM fedora:latest
      RUN curl -o /etc/yum.repos.d/infra-tags.repo https://infrastructure.fedoraproject.org/cgit/ansible.git/plain/files/common/fedora-infra-tags.repo
{% if env == "staging" %}
      RUN curl -o /etc/yum.repos.d/infra-tags-stg.repo https://infrastructure.fedoraproject.org/cgit/ansible.git/plain/files/common/fedora-infra-tags-stg.repo
{% endif %}
      RUN dnf install -y \
          ipsilon \
          ipsilon-authfas \
          ipsilon-openid \
          ipsilon-saml2 \
          ipsilon-persona \
          ipsilon-infofas \
          ipsilon-authgssapi \
          ipsilon-openidc \
          fedora-ipsilontheme \
          mod_auth_openidc \
          python-psycopg2 \
          httpd \
          mod_wsgi

      # Fedora specific stuff - Terrible hacky way to install, but works for testing purposes
      RUN curl https://infrastructure.fedoraproject.org/cgit/ansible.git/plain/roles/ipsilon/files/api.py -o /usr/lib/python3.8/site-packages/ipsilon/providers/openid/extensions/api.py && \
{% for scope_file in oidc_scope_filenames %}
          curl https://infrastructure.fedoraproject.org/cgit/ansible.git/plain/roles/ipsilon/files/oidc_scopes/{{ scope_file }}.py -o /usr/lib/python3.8/site-packages/ipsilon/providers/openidc/plugins/{{scope_file}}.py && \
{% endfor %}
          curl https://infrastructure.fedoraproject.org/cgit/ansible.git/plain/roles/ipsilon/files/infofas.py -o /usr/lib/python3.8/site-packages/ipsilon/info/infofas.py

      # Set up krb5
      RUN rm -f /etc/krb5.conf && ln -sf /etc/ipsilon/krb5.conf /etc/krb5.conf

      RUN ln -s /etc/ipsilon/ipsilon.conf /var/lib/ipsilon/ipsilon.conf

      EXPOSE 8080
      ENTRYPOINT bash /etc/ipsilon/start.sh
    type: Dockerfile
  strategy:
    type: Docker
  output:
    to:
      kind: ImageStreamTag
      name: ipsilon:latest
