#
# Celery configuration file
# See: http://docs.celeryproject.org/en/latest/userguide/configuration.html
#

from celery.schedules import crontab

# Broker settings

import ssl
broker_url = "amqps://bodhi{{ env_suffix }}:@rabbitmq{{ env_suffix }}.fedoraproject.org//bodhi"
broker_login_method = "EXTERNAL"

# Contrary to what the docs says, we can't define SSL options in broker_use_ssl, or the ssl_version
# will be ignored and we need to force TLS1.2. I will report that bug ASAP. A workaround is to use
# broker_transport_options.

broker_use_ssl = True
broker_transport_options = {"ssl": {
    "ca_certs": "/etc/pki/fedora-messaging/cacert.pem",
    "keyfile": "/etc/pki/fedora-messaging/bodhi-key.pem",
    "certfile": "/etc/pki/fedora-messaging/bodhi-cert.pem",
    "cert_reqs": ssl.CERT_REQUIRED,
    "ssl_version": ssl.PROTOCOL_TLSv1_2,
}}

# Where the tasks are defined
imports = "bodhi.server.tasks"

# Send back tasks results so we can wait for them
result_backend = 'rpc://'
result_persistent = True

# Task routing
task_routes = {
    # Route the following tasks to a specific queue that will only be run on
    # hosts that have a Koji mount.
    'compose': {'queue': 'has_koji_mount'},
    'clean_old_composes': {'queue': 'has_koji_mount'},
}

{% if env == "staging" %}
# Periodic tasks

beat_schedule = {
    "approve-testing": {
        "task": "bodhi.server.tasks.approve_testing_task",
        "schedule": 3 * 60,  # every 3 minutes
    },
    "check-policies": {
        "task": "bodhi.server.tasks.check_policies_task",
        "schedule": 60 * 60,  # every hour
    },
    "clean-old-composes": {
        "task": "bodhi.server.tasks.clean_old_composes_task",
        "schedule": crontab(hour=3, minute=3),
        "kwargs": {"num_to_keep": 10},
    },
    "expire-overrides": {
        "task": "bodhi.server.tasks.expire_overrides_task",
        "schedule": 60 * 60,  # every hour
    },
}
{% endif %}