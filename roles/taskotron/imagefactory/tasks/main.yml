---
- name: ensure packages required for imagefactory are installed (dnf)
  dnf: name={{ item }} state=present
  with_items:
    - imagefactory
    - imagefactory-plugins
    - imagefactory-plugins-TinMan
    - git

- name: copy imagefactory.conf config file
  copy: src=imagefactory.conf dest=/etc/imagefactory/imagefactory.conf owner=root group=root mode=0644

- name: copy oz.cfg config file
  copy: src=oz.cfg dest=/etc/oz/oz.cfg owner=root group=root mode=0644

- name: copy imagefactory-kill-zombie script
  copy:
    src: imagefactory-kill-zombie
    dest: /usr/local/bin
    owner: root
    group: root
    mode: '0744'

- name: copy imagefactory-kill-zombie service
  copy:
    src: imagefactory-kill-zombie.service
    dest: /etc/systemd/system
  register: imagefactory_kill_zombie_service

- name: copy imagefactory-kill-zombie timer
  copy:
    src: imagefactory-kill-zombie.timer
    dest: /etc/systemd/system
  register: imagefactory_kill_zombie_timer

# Workaround for https://github.com/redhat-imaging/imagefactory/issues/417
- name: fix issues in imagefactoryd.service
  copy:
    src: imagefactoryd.service
    dest: /etc/systemd/system/imagefactoryd.service
  register: imagefactory_service

- name: reload systemd
  command: systemctl daemon-reload
  when: imagefactory_service.changed or imagefactory_kill_zombie_service.changed or imagefactory_kill_zombie_timer.changed

- name: enable imagefactory
  service: name=imagefactoryd state=started enabled=yes

- name: enable imagefactory-kill-zombie.timer
  service:
    name: imagefactory-kill-zombie.timer
    state: started
    enabled: yes

- name: create directory for git clone
  file: path=/var/lib/fedoraqa state=directory owner=root group=root mode=1755

- name: Check out our imagefactory tools
  git:
    repo: https://pagure.io/taskotron/base_images.git
    dest: '/var/lib/fedoraqa/base_images'
    update: yes
    version: 'master'
  register: git_result
  changed_when: "git_result.after|default('after') != git_result.before|default('before')"

- name: create directory for configuration
  file: path=/etc/taskotron_base_images state=directory owner=root group=root mode=0755

- name: Generate configuration
  template: src={{ item }} dest=/etc/taskotron_base_images/config_server.ini owner=root group=root mode=0644
  with_first_found:
    - config_server.ini.j2.{{ deployment_type }}
    - config_server.ini.j2

- name: Install cron job to build new images (and other tasks) in ImageFactory
  template:
    src: imagefactory-server.cron.j2
    dest: /etc/cron.d/imagefactory-server.cron
    owner: root
    group: root
    mode: 0644
