- name: make the app be real
  hosts: os_masters[0]:os_masters_stg[0]
  user: root
  gather_facts: False

  vars_files:
    - /srv/web/infra/ansible/vars/global.yml
    - "/srv/private/ansible/vars.yml"
    - /srv/web/infra/ansible/vars/{{ ansible_distribution }}.yml

  vars:
    - bodhi_message_queue_name: "bodhi{{ env_suffix }}"
    - bodhi_message_routing_keys:
      - "org.fedoraproject.*.bodhi.update.edit"
      - "org.fedoraproject.*.bodhi.update.request.testing"
      - "org.fedoraproject.*.buildsys.tag"
      - "org.fedoraproject.*.greenwave.decision.update"

  pre_tasks:
  - include_vars: dir=/srv/web/infra/ansible/vars/all/ ignore_files=README
  - set_fact:
    args:
      bodhi_version: "{{ hostvars[groups['bodhi2_stg'][0]]['bodhi_version'] }}"
    when: env == "staging"
  - set_fact:
    args:
      bodhi_version: "{{ hostvars[groups['bodhi2'][0]]['bodhi_version'] }}"
    when: env == "production"

  roles:
  - role: rabbit/user
    username: "bodhi{{ env_suffix }}"
  - role: rabbit/queue
    username: "bodhi{{ env_suffix }}"
    queue_name: "{{ bodhi_message_queue_name }}"
    routing_keys: "{{ bodhi_message_routing_keys }}"
    thresholds:
      warning: 10
      critical: 100
  - role: openshift/project
    app: bodhi
    description: bodhi
    appowners:
    - bowlofeggs
    - cverna
    - abompard
    - pingou
    tags:
      - apply-appowners
    when: env == "production"
  - role: openshift/project
    app: bodhi
    description: bodhi
    appowners:
    - bowlofeggs
    - cverna
    - abompard
    - pingou
    - scoady
    - asaleh
    tags:
      - apply-appowners
    when: env == "staging"
  - role: openshift/keytab
    app: bodhi
    key: koji-keytab
    secret_name: bodhi-keytab
    service: bodhi
    host: "bodhi{{ env_suffix }}.fedoraproject.org"
  - role: openshift/secret-file
    app: bodhi
    secret_name: bodhi-fedora-messaging-ca
    key: cacert.pem
    privatefile: "rabbitmq/{{env}}/pki/ca.crt"
  - role: openshift/secret-file
    app: bodhi
    secret_name: bodhi-fedora-messaging-crt
    key: bodhi-cert.pem
    privatefile: "rabbitmq/{{env}}/pki/issued/bodhi{{env_suffix}}.crt"
  - role: openshift/secret-file
    app: bodhi
    secret_name: bodhi-fedora-messaging-key
    key: bodhi-key.pem
    privatefile: "rabbitmq/{{env}}/pki/private/bodhi{{env_suffix}}.key"
  - role: openshift/imagestream
    app: bodhi
    imagename: bodhi-base
  - role: openshift/imagestream
    app: bodhi
    imagename: bodhi-web
  - role: openshift/imagestream
    app: bodhi
    imagename: bodhi-consumer
  - role: openshift/imagestream
    app: bodhi
    imagename: bodhi-celery
  - role: openshift/object
    app: bodhi
    template: buildconfig.yml
    objectname: buildconfig.yml
    when: env == "production"
  - role: openshift/object
    app: bodhi
    template: buildconfig-stg.yml
    objectname: buildconfig.yml
    when: env == "staging"
  - role: openshift/start-build
    app: bodhi
    buildname: bodhi-base
  - role: openshift/object
    app: bodhi
    template_fullpath: "{{roles_path}}/bodhi2/base/templates/configmap.yml"
    objectname: configmap.yml
  - role: openshift/object
    app: bodhi
    file: service.yml
    objectname: service.yml
  - role: openshift/route
    app: bodhi
    routename: bodhi-web
    host: "bodhi{{ env_suffix }}.fedoraproject.org"
    serviceport: web
    servicename: bodhi-web
  - role: openshift/object
    app: bodhi
    template: deploymentconfig.yml
    objectname: deploymentconfig.yml
  - role: openshift/rollout
    app: bodhi
    dcname: bodhi-web
  - role: openshift/rollout
    app: bodhi
    dcname: bodhi-consumer
  - role: openshift/rollout
    app: bodhi
    dcname: bodhi-celery

  post_tasks:
  - name: Scale up pods
    command: oc -n bodhi scale dc/bodhi-consumer --replicas={{ hostvars[groups['bodhi2'][0]]['openshift_pods'] }}
    when: env == "production"
  - name: Scale up pods
    command: oc -n bodhi scale dc/bodhi-celery --replicas={{ hostvars[groups['bodhi2'][0]]['openshift_pods'] }}
    when: env == "production"
  - name: Scale up pods
    command: oc -n bodhi scale dc/bodhi-web --replicas={{ hostvars[groups['bodhi2'][0]]['openshift_pods'] }}
    when: env == "production"
  - name: Scale up pods
    command: oc -n bodhi scale dc/bodhi-consumer --replicas={{ hostvars[groups['bodhi2_stg'][0]]['openshift_pods'] }}
    when: env == "staging"
  - name: Scale up pods
    command: oc -n bodhi scale dc/bodhi-celery --replicas={{ hostvars[groups['bodhi2_stg'][0]]['openshift_pods'] }}
    when: env == "staging"
  - name: Scale up pods
    command: oc -n bodhi scale dc/bodhi-web --replicas={{ hostvars[groups['bodhi2_stg'][0]]['openshift_pods'] }}
    when: env == "staging"
